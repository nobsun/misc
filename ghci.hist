:q
:q
:q
select [2,1,3,4,1]
:r
select [2,1,3,4,1]
:r
:r
:r
putStr it
showResult it
take 10 $ eval [3,1,4,5,2]
:r
:r
take 10 $ eval $ step (0,[3,1,4,5,2])
take 10 $ eval (0,[3,1,4,5,2])
step (0,[3,1,4,5,2])
:l app/sorting/Main.hs
:q
swaps 3 [1,4,5,2]
:i Monoid
:i Semigroup
True <> False
swaps 3 [1,4,5,2]
:l app/sorting/Main.hs
:q
:q
:main abc 123 DEF
:r
:main
:l src/LazyList.hs
:q
DEF
123
abc
skewappend (Sequential, Lazy)
DEF
123
abc
skewappend (Sequential, Strict)
:r
:r
:r
:r
:l src/LazyIO.hs 
DEF
123
abc
main'
:r
:r
DEF
123
abc
main'
:r
DEF
123
abc
main'
:r
DEF
123
abc
main'
:r
DEF
123
abc
main
DEF
123
abc
main'
:r
DEF
123
abc
main'
:r
DEF
123
abc
main'
:r
DEF
123
abc
main'
:r
DEF
123
abc
main'
:r
:r
DEF
123
abc
main'
